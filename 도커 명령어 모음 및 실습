이미지 확인

docker images

이미지 가져오기

docker pull tensorflow/tensorflow:latest-gpu-jupyter

위 이미지는 지피유를 지원하면서 주피터를 기본 에디터로 사용하는 이미지

이름 뒤에 tag를 계속해서 달아서 원하는 이미지를 받을 수 있다.

-는 태그 간의 구분자로

여러 개의 태그를 동시에 달아서 작업을 수행할 수 있다.

텐서플로우에서 공식적으로 지원하는 컨테이너 이미지들은

아래의 페이지에서 확인할 수 있다.

www.tensorflow.org/install/docker

nvidia-container-toolkit 설치

distribution=$(. /etc/os-release;echo $ID$VERSION_ID) \
&& curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add - \
&& curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list


나는 현재 가장 최신버전인 22.04 버전을 쓰고 있어서 계속 오류가 발생하였다.
cat /etc/os-release 로 id와 version 정보를 확인 후 distribution=$(. /etc/os-release;echo $ID"20.4") \
20.4 버전으로 설정하였다.

sudo apt-get update

sudo apt-get install -y nvidia-docker2

sudo systemctl restart docker

테스트

sudo docker run --rm --gpus all nvidia/cuda:11.0-base nvidia-smi

정상적으로 작동하면 그래픽카드 정보가 뜸

주피터 노트북 gpu 설치

docker pull tensorflow/tensorflow:latest-gpu-jupyter

컨테이너 만들기 (외부에서 접속하려면 포트포워딩 필요)

-p [바인딩 할 호스트의 포트]:[바인딩 할 컨테이너의 포트]

(나의 경우 44551 : 8888로 포트포워딩을 했기 때문에 외부에서 ip:44551로 접속하면 내부 컨테이너 포트인 8888로 접속된다.)

docker run --gpus all --it --rm --name myTensorflow -p 8888:8888 tensorflow/tensorflow:latest-gpu-jupyter

텐서플로우 gpu 사용여부 확인

import tensorflow as tf

print(tf.__version__)
# 1.14.0

tf.test.is_gpu_available(
    cuda_only=False,
    min_cuda_compute_capability=None
)


컨테이너 확인

docker ps -a

docker ps

종료된 컨테이너는 실행해야 접속 가능함.

docker start (컨테이너 이름)

컨테이너 접속

docker attach (컨테이너 이름)

